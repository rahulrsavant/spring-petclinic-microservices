pipeline{
    agent { label "master"}
    environment{
        appName="spring-petclinic-microservices"
        groupId="org.springframework.samples"
        version="1.0.${currentBuild.startTimeInMillis}"
        nexusGroupIdPath="org/springframework/samples"
        adminServerArtifactId="spring-petclinic-admin-server"
        apiGatewayArtifactId="spring-petclinic-api-gateway"
        configServerArtifactId="spring-petclinic-config-server"
        customersServiceArtifactId="spring-petclinic-customers-service"
        discoveryServerArtifactId="spring-petclinic-discovery-server"
        monitoringArtifactId="spring-petclinic-monitoring"
        tracingServerArtifactId="spring-petclinic-tracing-server"
        vetsServiceArtifactId="spring-petclinic-vets-service"
        visitsServiceArtifactId="spring-petclinic-visits-service"
        artifactPatternToArchive="target/**/*.jar"
        artifactPackaging="jar"
    }

    stages{
        stage("Build and Unit Test"){
            steps{
                sh "mvn -B clean package -Drevision=${version}"
                echo "build all docker images"
            }
            post{
                always{
                    echo "archive tests"
                }
                success{
                    echo "archive artifacts"
                }
            }
        }
        stage("Deploy"){
            steps{
                echo "deploy with docker compose"
            }
        }
        stage("Quality"){
            steps{
                echo "exploratory tests"
            }
        }
        stage("Publish"){
            steps{
                echo "publish to Nexus"
            }
        }
    }
}